MIT License

Copyright (c) 2019-2020 Discord Bot Portal JP

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
 1  Procfile 
@@ -0,0 +1 @@
discordbot: python discordbot.py
 36  README.md 
@@ -0,0 +1,36 @@
# discordpy-startup

[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)

- Herokuでdiscord.pyを始めるテンプレートです。
- Use Template からご利用ください。
- 使い方はこちら： [Discord Bot 最速チュートリアル【Python&Heroku&GitHub】 - Qiita](https://qiita.com/1ntegrale9/items/aa4b373e8895273875a8)

## 各種ファイル情報

### discordbot.py
PythonによるDiscordBotのアプリケーションファイルです。

### requirements.txt
使用しているPythonのライブラリ情報の設定ファイルです。

### Procfile
Herokuでのプロセス実行コマンドの設定ファイルです。

### runtime.txt
Herokuでの実行環境の設定ファイルです。

### app.json
Herokuデプロイボタンの設定ファイルです。

### .github/workflows/flake8.yaml
GitHub Actions による自動構文チェックの設定ファイルです。

### .gitignore
Git管理が不要なファイル/ディレクトリの設定ファイルです。

### LICENSE
このリポジトリのコードの権利情報です。MITライセンスの範囲でご自由にご利用ください。

### README.md
このドキュメントです。
 6  app.json 
@@ -0,0 +1,6 @@
{
  "name": "discordpy-startup",
  "description": "Herokuでdiscord.pyを始めるテンプレート",
  "repository": "https://github.com/DiscordBotPortalJP/discordpy-startup",
  "keywords": ["python", "discord", "bot"]
}
 35  discordbot.py 
@@ -0,0 +1,35 @@
import discord
import googletrans
from pprint import pprint
# 輸入自己Bot的TOKEN碼
TOKEN = 'ODU0Njk2OTM0NTA0NTI5OTYy.YMnsjA.ccP75JIJTlNH0gjfDIxVPIMu2XI'

client = discord.Client()

# 起動時呼叫
@client.event
async def on_ready():
    print('成功登入')

# 收到訊息時呼叫
@client.event
async def on_message(message):
    # 送信者為Bot時無視
    if message.author.bot:
        return

    if client.user in message.mentions: # @判定
        translator = googletrans.Translator()
        robotName = client.user.name
        if translator.detect(message.content) == 'zh-tw':
            return

        first, space, content = message.clean_content.partition('@'+robotName+' ')

        if content == '':
            content = first
        remessage = translator.translate(content, dest='zh-tw').text
        await message.reply(remessage) 

# Bot起動
client.run(TOKEN) 
 2  requirements.txt 
@@ -0,0 +1,2 @@
discord.py[voice]>=1.4.1
googletrans==4.0.0-rc1
 1  runtime.txt 
@@ -0,0 +1 @@
python-3.8.5
